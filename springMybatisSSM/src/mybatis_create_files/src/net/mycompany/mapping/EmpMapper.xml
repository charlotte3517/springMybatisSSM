<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.mycompany.dao.EmpMapper">
  <resultMap id="BaseResultMap" type="net.mycompany.pojo.Emp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fullname" jdbcType="VARCHAR" property="fullname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="finished_military" jdbcType="VARCHAR" property="finishedMilitary" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    id, fullname, email, birthday, profession, finished_military, gender, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="net.mycompany.pojo.Emp">
    insert into employee (id, fullname, email, 
      birthday, profession, finished_military, 
      gender, note)
    values (#{id,jdbcType=INTEGER}, #{fullname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, #{finishedMilitary,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.mycompany.pojo.Emp">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullname != null">
        fullname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="finishedMilitary != null">
        finished_military,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullname != null">
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="finishedMilitary != null">
        #{finishedMilitary,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.mycompany.pojo.Emp">
    update employee
    <set>
      <if test="fullname != null">
        fullname = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="finishedMilitary != null">
        finished_military = #{finishedMilitary,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.mycompany.pojo.Emp">
    update employee
    set fullname = #{fullname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      finished_military = #{finishedMilitary,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>